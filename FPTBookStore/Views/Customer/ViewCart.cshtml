@model List<FPTBookStore.Models.CartItem>

@{
    Layout = "~/Views/Shared/_CustomerLayout.cshtml";
    ViewData["Title"] = "Page Title";
}

<h2 style="text-align: center; color: tomato">SHOPPING CART </h2>

@if (Model.Count > 0)
{
    decimal total = 0;
    int stt = 1;

      <table class="table">
        <tr>
          <th>#</th>
          <th>Product</th>
          <th>Price </th>
          <th>Quantity</th>
          <th>Total</th>
          <th></th>
        </tr>
        @foreach (var cartitem in Model)
        {
            @*total payment = quantity * price*@
            var thanhtien = cartitem.Quantity * cartitem.product.Price;
            total += thanhtien;
                <tr>                   
                   <td>@(stt++)</td>
                   <td>@cartitem.product.Name</td>
                   <td>@(cartitem.product.Price.ToString("n0"))</td>
                   <td>
                    <input asp-for="@cartitem.Quantity" id="@($"quantity-{cartitem.product.Id}")"  />
                   </td>
                   <td>@(thanhtien.ToString("n0"))</td>
                   <td>
                    @*<button class="btn btn-success updatecartitem" type="submit"
                    data-productid="@cartitem.product.Id" >Update
                    </button>*@
                    @*<a asp-Controller="Customer" asp-action="UpdateCart" asp-route-productid="@cartitem.product.Id" class="btn btn-success">Update</a>*@
                    <a href="#" class="btn btn-success">Update</a>
                    <a asp-Controller="Customer" asp-action="RemoveCart" asp-route-productid="@cartitem.product.Id" class="btn btn-danger">Delete</a>
                   </td>                  
                </tr>
        }
          <tr>
              <td colspan="4" class="text-right">Total Payment: </td>
              <td>@(total.ToString("n0"))</td>
              <td></td>
            <td>
                <a type="submit" asp-controller="Customer" asp-action="Checkout" class="btn btn-success">Order confirmation product</a>
            </td>
        </tr>
      </table>
}
else
{
    <p style="text-align:center" class="alert alert-danger">There are no products in your cart!</p>
    <p style="text-align:center" class="alert alert-danger">Please check back or add to cart a new product!</p>
    <a asp-controller="Customer" asp-action="Index" class="btn btn-success" style="text-align:center; margin-left: 45%">Back to Shopping</a>
}
<script type="text/javascript">
    var elems = document.getElementsByClassName('Checkout');
    var confirmIt = function (e) {
        if (!confirm('Are you sure to make this order?')) e.preventDefault();
    };
    for (var i = 0, l = elems.length; i < l; i++) {
        elems[i].addEventListener('click', confirmIt, false);
    }
</script>

    <script>
        $(document).ready(function () {
            $(".updatecartitem").click(function (event) {
                event.preventDefault();
                var productid = $(this).attr("data-productid");
                var quantity = $("#quantity-" + productid).val();
                $.ajax({
                    type: "POST",
                url: "@Url.RouteUrl("UpdateCart")",
                    data: {
                        Id: productid,
                        Quantity: quantity
                    },
                    success: function (result) {
                        window.location.href = "@Url.RouteUrl("Index")";
                    }
                });
            });
        });
    </script>

    <script>
    function updateCartQuantity(productId, newQuantity) {
        // Tìm sản phẩm trong giỏ hàng theo ID
        const productInCart = document.querySelector(`.cart-item[data-product-id="${productId}"]`);

        // Nếu sản phẩm có tồn tại trong giỏ hàng, cập nhật số lượng mới
        if (productInCart) {
            // Cập nhật số lượng sản phẩm
            const quantityElement = productInCart.querySelector('.cart-item__quantity');
            quantityElement.textContent = newQuantity;

            // Cập nhật tổng tiền cho sản phẩm
            const pricePerItem = parseFloat(productInCart.dataset.price);
            const totalItemPrice = pricePerItem * newQuantity;
            const totalPriceElement = productInCart.querySelector('.cart-item__total-price');
            totalPriceElement.textContent = `$${totalItemPrice.toFixed(2)}`;
        }
    }

</script>
      